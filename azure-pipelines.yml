# PHP as Linux Web App on Azure

trigger:
- master

variables:
  azureSubscription: '2c879bc0-8bdf-4c05-becf-5ebece9a9536'
  webAppName: 'demohtml'
  vmImageName: 'ubuntu-latest'
  environmentName: 'demohtml'
  rootFolder: $(System.DefaultWorkingDirectory) # Update if composer.json is in a subfolder

stages:
- stage: Build
  displayName: Build stage
  variables:
    phpVersion: '8.2'
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        php -version
      displayName: 'Use PHP version $(phpVersion)'

    # Debug: Check file structure
    - script: ls -la $(System.DefaultWorkingDirectory)
      displayName: 'List root directory files'
      
    - script: find $(System.DefaultWorkingDirectory) -name "composer.json"
      displayName: 'Find composer.json location'

    # Validate composer.json before installation
    - script: |
        if [ ! -f "$(rootFolder)/composer.json" ]; then
          echo "ERROR: composer.json not found in $(rootFolder)."
          exit 1
        fi
      displayName: 'Validate composer.json'

    # Install dependencies if composer.json exists
    - script: composer install --no-interaction --prefer-dist --optimize-autoloader
      workingDirectory: $(rootFolder)
      displayName: 'Composer install'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(rootFolder)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : demohtml'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              appType: webAppLinux
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
